services:
  postgresdb:
    container_name: postgrecontainer
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SERVICE_TAGS: dev1
      SERVICE_NAME: postgresservice
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - postgresvolume:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - spring

  pgadmin:
    container_name: pgadmincontainer
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_DEFAULT_ADDRESS: 6000
      PGADMIN_LISTEN_PORT: 6000
    depends_on:
      - postgresdb
    expose:
      - 6000
    ports:
      - 7000:6000
    volumes:
      - pgadminvolume:/var/lib/pgadmin
    networks:
      - spring

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - spring

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Add these configurations to increase message size limits
      KAFKA_MESSAGE_MAX_BYTES: 1300000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1300000000
      KAFKA_FETCH_MESSAGE_MAX_BYTES: 1300000000
      # You might also need these
      KAFKA_MAX_REQUEST_SIZE: 1300000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1300000000
    depends_on:
      - zookeeper
    networks:
      - spring

  discoveryserver:
    image: doukoure93/discoveryserver:latest
    container_name: discoveryserver
    ports:
      - "5002:5002"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - spring
    depends_on:
      - postgresdb

  gateway:
    image: doukoure93/gateway:latest
    container_name: gateway
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - spring
    depends_on:
      - discoveryserver

  authorizationserver:
    image: doukoure93/authorizationserver:latest
    container_name: authorizationserver
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - spring
    depends_on:
      - postgresdb
      - discoveryserver

  userservice:
    image: doukoure93/userservice:latest
    container_name: userservice
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - spring
    depends_on:
      - postgresdb
      - kafka
      - discoveryserver

  ebanking:
    image: doukoure93/ebanking:latest
    container_name: ebanking
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - spring
    depends_on:
      - discoveryserver

  ecreditservice:
    image: doukoure93/ecreditservice:latest
    container_name: ecreditservice
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - spring
    depends_on:
      - postgresdb
      - discoveryserver

  notificationservice:
    image: doukoure93/notificationservice:latest
    container_name: notificationservice
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - spring
    depends_on:
      - kafka
      - discoveryserver

volumes:
  postgresvolume:
  pgadminvolume:

networks:
  zipkin:
    driver: bridge
  spring:
    driver: bridge
