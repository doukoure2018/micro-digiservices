services:
  postgresdb:
    container_name: postgrecontainer
    image: postgres:latest
    environment:
      POSTGRES_USER: user2711
      POSTGRES_DB: localdb
      POSTGRES_PASSWORD: admin2711
      SERVICE_TAGS: prod
      SERVICE_NAME: postgresservice
    healthcheck: # Add this section
      test: [ "CMD-SHELL", "pg_isready -U user2711 -d localdb" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - postgresvolume:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - spring
    restart: always

  pgadmin:
    container_name: pgadmincontainer
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: douklifsa93@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin2711
      PGADMIN_DEFAULT_ADDRESS: 6000
      PGADMIN_LISTEN_PORT: 6000
    depends_on:
      - postgresdb
    expose:
      - 6000
    ports:
      - 7000:6000
    volumes:
      - pgadminvolume:/var/lib/pgadmin
    networks:
      - spring
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - spring
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://51.91.254.218:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - spring
    restart: always

  discoveryserver:
    image: doukoure93/discoveryserver:latest
    container_name: discoveryserver
    ports:
      - "5002:5002"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - HOSTNAME=discoveryserver
      - SERVER_IP=51.91.254.218
      - EUREKA_PASSWORD=admin2711
      - EUREKA_PORT=5002
      - DB_HOST=postgresdb  # Use the service name from docker-compose
      - DB_PORT=5432
      - DB_NAME=localdb
      - DB_USERNAME=user2711
      - DB_PASSWORD=admin2711
    volumes:
      - ./config/discoveryserver/application-prod.yml:/app/application-prod.yml
    networks:
      - spring
    healthcheck:
      test: [ "CMD", "curl", "-f", "-u", "admin:admin2711", "http://localhost:5002/eureka/apps" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      postgresdb:
        condition: service_healthy
    restart: always

  gateway:
    image: doukoure93/gateway:latest
    container_name: gateway
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - HOSTNAME=gateway
      - SERVER_IP=51.91.254.218
      - EUREKA_PASSWORD=admin2711
      - EUREKA_HOST=discoveryserver
      - EUREKA_PORT=5002
      - SERVER_PORT=8000
      - AUTH_SERVER_HOST=authorizationserver
      - AUTH_SERVER_PORT=8080
    volumes:
      - ./config/gateway/application-prod.yml:/app/application-prod.yml
    networks:
      - spring
    depends_on:
      - discoveryserver
    restart: always

  authorizationserver:
    image: doukoure93/authorizationserver:latest
    container_name: authorizationserver
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_NAME=localdb
      - DB_USERNAME=user2711
      - DB_PASSWORD=admin2711
      - DB_SCHEMA=localdb
      - HOSTNAME=authorizationserver
      - SERVER_IP=51.91.254.218
      - EUREKA_PASSWORD=admin2711
      - EUREKA_HOST=discoveryserver
      - EUREKA_PORT=5002
      - SERVER_PORT=8080
      - UI_URL=http://51.91.254.218:4200
    volumes:
      - ./config/authorizationserver/application-prod.yml:/app/application-prod.yml
      - ./keys:/app/keys
    networks:
      - spring
    depends_on:
      - postgresdb
      - discoveryserver

  userservice:
    image: doukoure93/userservice:latest
    container_name: userservice
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_NAME=localdb
      - DB_USERNAME=user2711
      - DB_PASSWORD=admin2711
      - DB_SCHEMA=localdb
      - HOSTNAME=userservice
      - SERVER_IP=51.91.254.218
      - EUREKA_PASSWORD=admin2711
      - EUREKA_HOST=discoveryserver
      - EUREKA_PORT=5002
      - SERVER_PORT=8085
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - AUTH_SERVER_HOST=authorizationserver
      - AUTH_SERVER_PORT=8080
      - UI_URL=http://51.91.254.218:4200
    volumes:
      - ./config/userservice/application-prod.yml:/app/application-prod.yml
    networks:
      - spring
    depends_on:
      - postgresdb
      - kafka
      - discoveryserver
    restart: always

#  ebanking:
#    image: doukoure93/ebanking:latest
#    container_name: ebanking
#    ports:
#      - "8081:8081"
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - HOSTNAME=ebanking
#      - SERVER_IP=51.91.254.218
#      - EUREKA_PASSWORD=admin2711
#      - EUREKA_HOST=discoveryserver
#      - EUREKA_PORT=5002
#      - SERVER_PORT=8081
#      - AUTH_SERVER_HOST=authorizationserver
#      - AUTH_SERVER_PORT=8080
#    volumes:
#      - ./config/ebanking/application-prod.yml:/app/application-prod.yml
#    networks:
#      - spring
#    depends_on:
#      - discoveryserver
#    restart: always

  ecreditservice:
    image: doukoure93/ecreditservice:latest
    container_name: ecreditservice
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_NAME=localdb
      - DB_USERNAME=user2711
      - DB_PASSWORD=admin2711
      - DB_SCHEMA=localdb
      - HOSTNAME=ecreditservice
      - SERVER_IP=51.91.254.218
      - EUREKA_PASSWORD=admin2711
      - EUREKA_HOST=discoveryserver
      - EUREKA_PORT=5002
      - SERVER_PORT=8087
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - AUTH_SERVER_HOST=authorizationserver
      - AUTH_SERVER_PORT=8080
      - UI_URL=http://51.91.254.218:4200
    volumes:
      - ./config/ecreditservice/application-prod.yml:/app/application-prod.yml
    networks:
      - spring
    depends_on:
      - postgresdb
      - discoveryserver
    restart: always

  notificationservice:
    image: doukoure93/notificationservice:latest
    container_name: notificationservice
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_NAME=localdb
      - DB_USERNAME=user2711
      - DB_PASSWORD=admin2711
      - DB_SCHEMA=localdb
      - HOSTNAME=notificationservice
      - SERVER_IP=51.91.254.218
      - EUREKA_PASSWORD=admin2711
      - EUREKA_HOST=discoveryserver
      - EUREKA_PORT=5002
      - SERVER_PORT=8086
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - AUTH_SERVER_HOST=authorizationserver
      - AUTH_SERVER_PORT=8080
      - UI_URL=http://51.91.254.218:4200
      - MAIL_USERNAME=douklifsa93@gmail.com
      - MAIL_PASSWORD=uppv zody hnsl bbzu
    volumes:
      - ./config/notificationservice/application-prod.yml:/app/application-prod.yml
    networks:
      - spring
    depends_on:
      - kafka
      - discoveryserver
    restart: always

volumes:
  postgresvolume:
  pgadminvolume:

networks:
  spring:
    name: spring-prod
    driver: bridge
    attachable: true
